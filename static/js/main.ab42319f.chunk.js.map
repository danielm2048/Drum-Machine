{"version":3,"sources":["audios/buzz.mp3","audios/clap.mp3","audios/cymbal.mp3","audios/flam.mp3","audios/kick.mp3","audios/opHat.mp3","audios/shaker.mp3","audios/snare.mp3","audios/tom.mp3","audioModule.js","Components/DrumPad.js","Components/DrumPadContainer.js","Components/VolumeSlider.js","Components/MadeBy.js","Components/Display.js","Components/CheckBox.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","audiosDrum","buzz","clap","cymbal","flam","kick","opHat","shaker","snare","tom","audiosSynth","DrumPad","props","handleClick","bind","handlePressKey","this","clip","volume","vol","load","play","disp","audios","let","event","String","fromCharCode","keyCode","toUpperCase","preventDefault","button","click","document","addEventListener","removeEventListener","className","ref","input","id","onClick","src","React","Component","DrumPadContainer","changeDisp","VolumeSlider","state","handleVolumeChange","rangeSlider","target","setState","value","titleChange","type","min","max","onChange","MadeBy","Display","display","CheckBox","handleCheckBox","App","title","createRef","e","innerHTML","checked","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ab42319f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/buzz.b9a08a5d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/clap.e226c232.mp3\";","module.exports = __webpack_public_path__ + \"static/media/cymbal.04b83e3a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/flam.b44c174d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/kick.c704d11e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/opHat.c40b171b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/shaker.d1667d1c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/snare.6c1c1aba.mp3\";","module.exports = __webpack_public_path__ + \"static/media/tom.37c4a0e1.mp3\";","import buzz from './audios/buzz.mp3';\r\nimport clap from './audios/clap.mp3';\r\nimport cymbal from './audios/cymbal.mp3';\r\nimport flam from './audios/flam.mp3';\r\nimport kick from './audios/kick.mp3';\r\nimport opHat from './audios/opHat.mp3';\r\nimport shaker from './audios/shaker.mp3';\r\nimport snare from './audios/snare.mp3';\r\nimport tom from './audios/tom.mp3';\r\n\r\nconst audiosDrum = {\r\n    'Q': [buzz, \"Buzz\"],\r\n    'W': [clap, \"Clap\"],\r\n    'E': [cymbal, \"Cymbal\"],\r\n    'A': [flam, \"Flam\"],\r\n    'S': [kick, \"Kick\"],\r\n    'D': [opHat, \"OpHat\"],\r\n    'Z': [shaker, \"Shaker\"],\r\n    'X': [snare, \"Snare\"],\r\n    'C': [tom, \"Tom\"]\r\n};\r\n\r\nconst audiosSynth = {\r\n    'Q': [\"http://dight310.byu.edu/media/audio/FreeLoops.com/1/1/808%20Drum%20Kick%20036-2478-Free-Loops.com.mp3\", \"Drum Kick\"],\r\n    'W': [\"http://www.synthmania.com/Roland%20D-50/Audio/Waveform%20demos/PCM%2033%20-%20Steam.mp3\", \"Steam\"],\r\n    'E': [\"http://www.downloadfreesound.com/wp-content/uploads/2014/07/Beep_5.mp3\", \"Beep\"],\r\n    'A': [\"http://dight310.byu.edu/media/audio/FreeLoops.com/5/5/Moog%20Bass%20Hit%2019-2817-Free-Loops.com.mp3\", \"Moog\"],\r\n    'S': [\"http://www.audiobulb.com/create/samples/perc_-_pop2.wav\", \"Percussion\"],\r\n    'D': [\"http://dight310.byu.edu/media/audio/FreeLoops.com/5/5/Lil%20Jon%20Hi%20Hat-8247-Free-Loops.com.mp3\", \"Hi Hat\"],\r\n    'Z': [\"http://dight310.byu.edu/media/audio/FreeLoops.com/2/2/DnB%20Fat%20Acid%20Bass-14970-Free-Loops.com.mp3\", \"Bass\"],\r\n    'X': [\"http://tones.fuzzup.net/mp3/44.mp3\", \"Bells\"],\r\n    'C': [\"http://patrickjohnston.org/ASM/ROM%20data/Super%20Metroid/BF%20stuff/Aveon%20Theme/Bass.wav\", \"Super Bass\"]\r\n};\r\n\r\nexport { audiosDrum, audiosSynth };","import React from 'react';\r\nimport '../App.css';\r\n\r\nclass DrumPad extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handlePressKey = this.handlePressKey.bind(this);\r\n    }\r\n    handleClick() {\r\n        this.clip.volume = (this.props.vol / 100);\r\n        this.clip.load();\r\n        this.clip.play();\r\n        this.props.disp(this.props.audios[this.props.let][1]);\r\n    }\r\n    handlePressKey(event) {\r\n        if (String.fromCharCode(event.keyCode).toUpperCase() === this.props.let) {\r\n            event.preventDefault();\r\n            this.button.click();\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        document.addEventListener(\"keydown\", this.handlePressKey);\r\n    }\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", this.handlePressKey);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"col-xs-4\">\r\n                <button className=\"btn btn-default drum-pad\" ref={input => { this.button = input }} id={this.props.let} onClick={this.handleClick}>\r\n                    {this.props.let}\r\n                    <audio className=\"clip\" ref={input => { this.clip = input }} id={this.props.let} src={this.props.audios[this.props.let][0]} />\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DrumPad;","import React from 'react';\r\nimport '../App.css';\r\nimport DrumPad from './DrumPad'\r\n\r\nclass DrumPadContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"padContainer\">\r\n                <div className=\"row\">\r\n                    <DrumPad let=\"Q\" disp={this.props.changeDisp} vol={this.props.volume} audios={this.props.audios} />\r\n                    <DrumPad let=\"W\" disp={this.props.changeDisp} vol={this.props.volume} audios={this.props.audios} />\r\n                    <DrumPad let=\"E\" disp={this.props.changeDisp} vol={this.props.volume} audios={this.props.audios} />\r\n                </div>\r\n                <br />\r\n                <div className=\"row\">\r\n                    <DrumPad let=\"A\" disp={this.props.changeDisp} vol={this.props.volume} audios={this.props.audios} />\r\n                    <DrumPad let=\"S\" disp={this.props.changeDisp} vol={this.props.volume} audios={this.props.audios} />\r\n                    <DrumPad let=\"D\" disp={this.props.changeDisp} vol={this.props.volume} audios={this.props.audios} />\r\n                </div>\r\n                <br />\r\n                <div className=\"row\">\r\n                    <DrumPad let=\"Z\" disp={this.props.changeDisp} vol={this.props.volume} audios={this.props.audios} />\r\n                    <DrumPad let=\"X\" disp={this.props.changeDisp} vol={this.props.volume} audios={this.props.audios} />\r\n                    <DrumPad let=\"C\" disp={this.props.changeDisp} vol={this.props.volume} audios={this.props.audios} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DrumPadContainer;","import React from 'react';\r\nimport '../App.css';\r\n\r\nclass VolumeSlider extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            volume: 50\r\n        };\r\n        this.handleVolumeChange = this.handleVolumeChange.bind(this);\r\n    }\r\n\r\n    handleVolumeChange(event) {\r\n        let rangeSlider = event.target;\r\n        this.setState({\r\n            volume: rangeSlider.value\r\n        });\r\n        this.props.titleChange(rangeSlider.value);\r\n        if (rangeSlider.value <= 5) {\r\n            rangeSlider.className = \"noVolume\";\r\n        }\r\n        else if (rangeSlider.value > 5 && rangeSlider.value <= 25) {\r\n            rangeSlider.className = \"volume1\";\r\n        }\r\n        else if (rangeSlider.value > 25 && rangeSlider.value <= 75) {\r\n            rangeSlider.className = \"volume2\";\r\n        }\r\n        else if (rangeSlider.value > 75) {\r\n            rangeSlider.className = \"volume3\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <input type=\"range\" min=\"1\" max=\"100\" value={this.state.volume} onChange={this.handleVolumeChange} className=\"volume2\" id=\"volumeRange\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VolumeSlider;","import React from 'react';\r\nimport '../App.css';\r\n\r\nconst MadeBy = () => {\r\n    return (\r\n        <div>\r\n            <h4>\r\n                <i className=\"fa fa-code\"></i> with <i className=\"fa fa-heart\"></i> by Daniel Mimoun\r\n            </h4>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MadeBy;","import React from 'react';\r\nimport '../App.css';\r\n\r\nconst Display = (props) => {\r\n    return (\r\n        <div id=\"display\" className=\"row\">\r\n            <p className=\"display\">{props.display}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Display;","import React from 'react';\r\nimport '../App.css';\r\n\r\nconst CheckBox = (props) => {\r\n    return (\r\n        <div className=\"row\">\r\n            <label className=\"rocker\">\r\n                <input onClick={props.handleCheckBox} type=\"checkbox\" />\r\n                <span className=\"switch-left\">Synth</span>\r\n                <span className=\"switch-right\">Drum</span>\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckBox;","import React, { createRef } from 'react';\nimport './App.css';\nimport { audiosDrum, audiosSynth } from './audioModule.js';\nimport DrumPadContainer from './Components/DrumPadContainer';\nimport VolumeSlider from './Components/VolumeSlider';\nimport MadeBy from './Components/MadeBy';\nimport Display from './Components/Display';\nimport CheckBox from './Components/CheckBox';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: \"Press the buttons or hit that keyboard!\",\n      volume: 50,\n      audios: audiosDrum\n    };\n    this.changeDisp = this.changeDisp.bind(this);\n    this.handleVolumeChange = this.handleVolumeChange.bind(this);\n    this.handleCheckBox = this.handleCheckBox.bind(this);\n    this.title = createRef();\n  }\n  changeDisp(disp) {\n    this.setState({\n      display: disp\n    });\n  }\n  handleVolumeChange(value) {\n    this.setState({\n      display: \"Volume is: \" + value,\n      volume: value\n    });\n  }\n  handleCheckBox(e) {\n    this.title.innerHTML = e.target.checked ? \"Synth Machine\" : \"Drum Machine\";\n    this.setState({\n      audios: e.target.checked ? audiosSynth : audiosDrum\n    });\n  }\n  render() {\n    return (\n      <div id=\"drum-machine\" className=\"container-fluid\">\n        <div className=\"row\">\n          <h1 ref={input => { this.title = input }}>Drum Machine</h1>\n        </div>\n        <CheckBox handleCheckBox={this.handleCheckBox} />\n        <br />\n        <Display display={this.state.display} />\n        <br />\n        <DrumPadContainer changeDisp={this.changeDisp} volume={this.state.volume} audios={this.state.audios} />\n        <br />\n        <VolumeSlider display={this.state.display} titleChange={this.handleVolumeChange} />\n        <br />\n        <MadeBy />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}